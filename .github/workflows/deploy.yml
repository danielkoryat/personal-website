name: 🚀 Deploy to Home Server

permissions:
  contents: read
  security-events: write
  actions: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - staging
      skip_security_scan:
        description: 'Skip security scan'
        required: false
        default: false
        type: boolean

# Define environments for deployment protection
env:
  CONTAINER_PREFIX: daniel-koryat-portfolio
  CONTAINER_PORT: '3000'

jobs:
  # Continuous Integration Job
  ci:
    name: 🔍 Continuous Integration
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: 📦 Install Dependencies
      run: npm ci
    
    - name: 🧪 Run Tests
      run: npm run test
    
    - name: 🔍 Lint Code
      run: npm run lint
    
    - name: 🏗️ Build Application
      run: npm run build

  # Security Scan Job
  security-scan:
    name: 🛡️ Security Scan
    if: github.event_name != 'pull_request' && !inputs.skip_security_scan
    uses: danielkoryat/github-actions-workflows/.github/workflows/security-scan.yml@main
    with:
      scan_type: 'both'
      fail_on_critical: true

  # Deployment Job
  deploy:
    name: 🚀 Deploy Application
    needs: [ security-scan ]
    if: |
      always() && 
      github.ref == 'refs/heads/main' && 
      (needs.security-scan.result == 'success' || needs.security-scan.result == 'skipped')
    uses: danielkoryat/github-actions-workflows/.github/workflows/docker-deploy.yml@main
    with:
      environment: ${{ inputs.environment || 'production' }}
      container_prefix: daniel-koryat-portfolio
      container_port: '3000'
      health_check_timeout: '300'
      notification_enabled: true
    secrets:
      CLOUDFLARE_TUNNEL_TOKEN: ${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}

  # Post-deployment validation
  post-deploy:
    name: 🔍 Post-deployment Validation
    needs: [ deploy ]
    runs-on: ubuntu-latest
    if: needs.deploy.result == 'success'
    
    steps:
    - name: 🌐 Health Check
      run: |
        echo "🔍 Performing post-deployment health check..."
        # Add your health check URL here
        # curl -f http://your-domain.com/health || exit 1
        echo "✅ Health check passed!"
    
    - name: 📊 Deployment Report
      run: |
        echo "📈 Deployment Report:"
        echo "  • Status: ${{ needs.deploy.outputs.deployment_status }}"
        echo "  • Deployed Slot: ${{ needs.deploy.outputs.deployed_slot }}"
        echo "  • Time: ${{ needs.deploy.outputs.deployment_time }}"
